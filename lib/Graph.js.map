{"version":3,"sources":["../src/Graph.js"],"sourcesContent":["const TopoSort = require('./TopoSort');\nconst { _ } = require('@genx/july');\n\nclass Graph {\n    constructor(json) {\n        this.topo = new TopoSort();\n\n        if (json) {\n            this.nodes = _.cloneDeep(json.nodes);\n            if (!_.isEmpty(json.edges)) {\n                _.forOwn(json.edges, (targets, source) => {\n                    this.topo.add(source, targets);\n                });\n            }\n            this.startNodes = json.startNodes;\n            this.endNodes = json.endNodes;\n        } else {\n            this.nodes = {};\n        }\n    }\n\n    hasNode(key) {\n        return key in this.nodes;\n    }\n\n    getNode(key) {\n        return this.nodes[key];\n    }\n\n    setNode(key, value) {\n        this.nodes[key] = value;\n        return this;\n    }\n\n    setEdge(sourceNode, targetNode) {\n        if (!this.hasNode(sourceNode)) {\n            throw new Error(`Source node [${sourceNode}] not exists.`);\n        }\n        if (!this.hasNode(targetNode)) {\n            throw new Error(`Target node [${targetNode}] not exists.`);\n        }\n        this.topo.add(sourceNode, targetNode);\n        return this;\n    }\n\n    getTargetNodes(sourceNode) {\n        return Array.from(this.topo.mapOfDependents[sourceNode]);\n    }\n\n    getSourceNodes(targetNode) {\n        return Array.from(this.topo.mapOfDependencies[targetNode]);\n    }\n\n    calcStartEnd() {\n        const seq = this.topo.sort();\n        this.startNodes = _.takeWhile(seq, (e) => !this.topo.hasDependency(e));\n        this.endNodes = _.takeRightWhile(\n            seq,\n            (e) => !this.topo.hasDependent(e)\n        );\n\n        if (this.startNodes.length === 0) {\n            this.startNodes = Object.keys(this.nodes);\n        }\n\n        if (this.endNodes.length === 0) {\n            this.endNodes = Object.keys(this.nodes);\n        }\n\n        return this;\n    }\n\n    toJSON() {\n        return {\n            nodes: this.nodes,\n            edges: _.mapValues(this.topo.mapOfDependents, (nodes) =>\n                Array.from(nodes)\n            ),\n            startNodes: this.startNodes,\n            endNodes: this.endNodes,\n        };\n    }\n}\n\nmodule.exports = Graph;\n"],"names":["TopoSort","require","_","Graph","hasNode","key","nodes","getNode","setNode","value","setEdge","sourceNode","targetNode","Error","topo","add","getTargetNodes","Array","from","mapOfDependents","getSourceNodes","mapOfDependencies","calcStartEnd","seq","sort","startNodes","takeWhile","e","hasDependency","endNodes","takeRightWhile","hasDependent","length","Object","keys","toJSON","edges","mapValues","constructor","json","cloneDeep","isEmpty","forOwn","targets","source","module","exports"],"mappings":"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"}