{"version":3,"sources":["../src/DeferredQueue.js"],"sourcesContent":["/**\n * id, job, dueAt, status, batchId (default '*'), dispatchedAt, lockFlag\n * uniqueKeys: [ job, batchId ]\n *\n */\nconst timestampOffset = 1640995200000;\n\nclass DeferredQueue {\n    constructor(app, storageModel, processTimeout) {\n        this.app = app;\n        this.storage = this.app.model(storageModel);\n        this.processTimeout = processTimeout || 600000;\n    }\n\n    genreateBatchId() {\n        return (Date.now() - timestampOffset).toString();\n    }\n\n    async postJobRequest_(job, deferedTime) {\n        const now = this.app.now();\n        const due = now.plus({ milliseconds: deferedTime || 3000 });\n\n        const queuedJob = await this.storage.create_(\n            {\n                job: JSON.stringify(job),\n                dueAt: due,\n                batchId: '*',\n            },\n            null,\n            {\n                insertIgnore: true,\n            }\n        );\n\n        return queuedJob;\n    }\n\n    async popExpiredRequests_() {\n        const expired = this.app\n            .now()\n            .minus({ milliseconds: this.processTimeout });\n\n        const deleteOptions = {\n            $query: {\n                batchId: { $neq: '*' },\n                dispatchedAt: { $lte: expired },\n                lockerId: { $exists: false },\n            },\n            $retrieveDbResult: true,\n        };\n\n        await this.remove_(deleteOptions);\n\n        return deleteOptions.$result.affectedRows;\n    }\n\n    async processDueRequests_() {\n        const now = this.app.now();\n        const batchId = this.genreateBatchId();\n\n        const updated = await this.storage.updateMany_(\n            {\n                batchId,\n                dispatchedAt: now,\n            },\n            {\n                $query: {\n                    batchId: '*',\n                    dueAt: { $lte: now },\n                },\n                $retrieveUpdated: {\n                    $query: {\n                        batchId,\n                    },\n                },\n            }\n        );\n\n        return updated;\n    }\n\n    async remove_(conditon) {\n        await this.storage.deleteMany_(conditon);\n    }\n\n    async removeById_(id) {\n        await this.storage.deleteOne_(id);\n    }\n\n    async clearQueue_() {\n        await this.storage.deleteAll_();\n    }\n\n    async getBatchStatus_() {\n        const batchStats = await this.storage.findAll_({\n            $projection: [\n                'batchId',\n                this.storage.db.connector.queryCount(null, 'batchId'),\n            ],\n            $query: {\n                lockerId: { $exists: false },\n            },\n            $groupBy: ['batchId'],\n            $skipOrm: true,\n        });\n\n        let pending = 0;\n        let processing = 0;\n        const batches = {};\n\n        batchStats.forEach((batch) => {\n            if (batch[0] === '*') {\n                pending = batch[1];\n            } else {\n                batches[batch[0]] = batch[1];\n                processing += batch[1];\n            }\n        });\n\n        return {\n            numPending: pending,\n            numProcessing: processing,\n            batches,\n        };\n    }\n}\n\nmodule.exports = DeferredQueue;\n"],"names":["timestampOffset","DeferredQueue","genreateBatchId","Date","now","toString","postJobRequest_","job","deferedTime","app","due","plus","milliseconds","queuedJob","storage","create_","JSON","stringify","dueAt","batchId","insertIgnore","popExpiredRequests_","expired","minus","processTimeout","deleteOptions","$query","$neq","dispatchedAt","$lte","lockerId","$exists","$retrieveDbResult","remove_","$result","affectedRows","processDueRequests_","updated","updateMany_","$retrieveUpdated","conditon","deleteMany_","removeById_","id","deleteOne_","clearQueue_","deleteAll_","getBatchStatus_","batchStats","findAll_","$projection","db","connector","queryCount","$groupBy","$skipOrm","pending","processing","batches","forEach","batch","numPending","numProcessing","constructor","storageModel","model","module","exports"],"mappings":"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"}