{"version":3,"sources":["../src/Graph.js"],"sourcesContent":["const TopoSort = require('./TopoSort');\nconst { _ } = require('@genx/july');\n\nclass Graph {\n    constructor(json) {\n        this.topo = new TopoSort();\n\n        if (json) {\n            this.nodes = _.cloneDeep(json.nodes);\n            if (!_.isEmpty(json.edges)) {\n                _.forOwn(json.edges, (targets, source) => {\n                    this.topo.add(source, targets);\n                });\n            }\n            this.startNodes = json.startNodes;\n            this.endNodes = json.endNodes;\n        } else {\n            this.nodes = {};\n        }\n    }\n\n    hasNode(key) {\n        return key in this.nodes;\n    }\n\n    getNode(key) {\n        return this.nodes[key];\n    }\n\n    setNode(key, value) {\n        this.nodes[key] = value;\n        return this;\n    }\n\n    setEdge(sourceNode, targetNode) {\n        if (!this.hasNode(sourceNode)) {\n            throw new Error(`Source node [${sourceNode}] not exists.`);\n        }\n        if (!this.hasNode(targetNode)) {\n            throw new Error(`Target node [${targetNode}] not exists.`);\n        }\n        this.topo.add(sourceNode, targetNode);\n        return this;\n    }\n\n    getTargetNodes(sourceNode) {\n        return Array.from(this.topo.mapOfDependents[sourceNode]);\n    }\n\n    getSourceNodes(targetNode) {\n        return Array.from(this.topo.mapOfDependencies[targetNode]);\n    }\n\n    calcStartEnd() {\n        const seq = this.topo.sort();\n        this.startNodes = _.takeWhile(seq, (e) => !this.topo.hasDependency(e));\n        this.endNodes = _.takeRightWhile(\n            seq,\n            (e) => !this.topo.hasDependent(e)\n        );\n\n        if (this.startNodes.length === 0) {\n            this.startNodes = Object.keys(this.nodes);\n        }\n\n        if (this.endNodes.length === 0) {\n            this.endNodes = Object.keys(this.nodes);\n        }\n\n        return this;\n    }\n\n    toJSON() {\n        return {\n            nodes: this.nodes,\n            edges: _.mapValues(this.topo.mapOfDependents, (nodes) =>\n                Array.from(nodes)\n            ),\n            startNodes: this.startNodes,\n            endNodes: this.endNodes,\n        };\n    }\n}\n\nmodule.exports = Graph;\n"],"names":["TopoSort","require","_","Graph","constructor","json","topo","nodes","cloneDeep","isEmpty","edges","forOwn","targets","source","add","startNodes","endNodes","hasNode","key","getNode","setNode","value","setEdge","sourceNode","targetNode","Error","getTargetNodes","Array","from","mapOfDependents","getSourceNodes","mapOfDependencies","calcStartEnd","seq","sort","takeWhile","e","hasDependency","takeRightWhile","hasDependent","length","Object","keys","toJSON","mapValues","module","exports"],"mappings":"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"}